exports[`Participant Choice render 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "flexDirection": "column",
      "marginTop": 20
    }
  }>
  <View
    style={
      Object {
        "flex": 1,
        "flexDirection": "row",
        "flexWrap": "wrap",
        "justifyContent": "flex-start"
      }
    }>
    <View
      style={
        Object {
          "backgroundColor": "rgba(255, 255, 255, 0.2)",
          "borderRadius": 13,
          "height": 26,
          "marginLeft": 6
        }
      }>
      <TextInput
        autoCorrect={false}
        autoFocus={true}
        onChangeText={[Function onChangeText]}
        onEndEditing={[Function onEndEditing]}
        onSubmitEditing={[Function onSubmitEditing]}
        returnKeyType="next"
        style={
          Array [
            Object {
              "backgroundColor": "rgba(255, 255, 255, 0)",
              "color": "#ffffff",
              "fontFamily": "Montserrat-Regular",
              "fontSize": 12,
              "height": 26,
              "minWidth": 100,
              "paddingBottom": 5,
              "paddingLeft": 10,
              "paddingRight": 10,
              "paddingTop": 5
            },
            Object {
              "width": 10
            }
          ]
        }
        value="" />
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      onLayout={undefined}
      onResponderGrant={[Function bound touchableHandleResponderGrant]}
      onResponderMove={[Function bound touchableHandleResponderMove]}
      onResponderRelease={[Function bound touchableHandleResponderRelease]}
      onResponderTerminate={[Function bound touchableHandleResponderTerminate]}
      onResponderTerminationRequest={[Function bound touchableHandleResponderTerminationRequest]}
      onStartShouldSetResponder={[Function bound touchableHandleStartShouldSetResponder]}
      style={
        Object {
          "height": 26,
          "justifyContent": "center",
          "marginLeft": 5,
          "opacity": 1,
          "width": 30
        }
      }
      testID={undefined}>
      <Image
        source={1}
        style={
          Object {
            "height": 20,
            "width": 20
          }
        } />
    </View>
  </View>
</View>
`;
